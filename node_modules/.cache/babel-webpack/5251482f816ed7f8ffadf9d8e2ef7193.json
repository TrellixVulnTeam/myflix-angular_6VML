{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Subscriber_1 = require(\"../Subscriber\");\n\nfunction bufferCount(bufferSize, startBufferEvery) {\n  if (startBufferEvery === void 0) {\n    startBufferEvery = null;\n  }\n\n  return function bufferCountOperatorFunction(source) {\n    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n  };\n}\n\nexports.bufferCount = bufferCount;\n\nvar BufferCountOperator = function () {\n  function BufferCountOperator(bufferSize, startBufferEvery) {\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  BufferCountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  };\n\n  return BufferCountOperator;\n}();\n\nvar BufferCountSubscriber = function (_super) {\n  __extends(BufferCountSubscriber, _super);\n\n  function BufferCountSubscriber(destination, bufferSize) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.bufferSize = bufferSize;\n    _this.buffer = [];\n    return _this;\n  }\n\n  BufferCountSubscriber.prototype._next = function (value) {\n    var buffer = this.buffer;\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  };\n\n  BufferCountSubscriber.prototype._complete = function () {\n    var buffer = this.buffer;\n\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n\n    _super.prototype._complete.call(this);\n  };\n\n  return BufferCountSubscriber;\n}(Subscriber_1.Subscriber);\n\nvar BufferSkipCountSubscriber = function (_super) {\n  __extends(BufferSkipCountSubscriber, _super);\n\n  function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.bufferSize = bufferSize;\n    _this.startBufferEvery = startBufferEvery;\n    _this.buffers = [];\n    _this.count = 0;\n    return _this;\n  }\n\n  BufferSkipCountSubscriber.prototype._next = function (value) {\n    var _a = this,\n        bufferSize = _a.bufferSize,\n        startBufferEvery = _a.startBufferEvery,\n        buffers = _a.buffers,\n        count = _a.count;\n\n    this.count++;\n\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (var i = buffers.length; i--;) {\n      var buffer = buffers[i];\n      buffer.push(value);\n\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  };\n\n  BufferSkipCountSubscriber.prototype._complete = function () {\n    var _a = this,\n        buffers = _a.buffers,\n        destination = _a.destination;\n\n    while (buffers.length > 0) {\n      var buffer = buffers.shift();\n\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n\n    _super.prototype._complete.call(this);\n  };\n\n  return BufferSkipCountSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=bufferCount.js.map","map":null,"metadata":{},"sourceType":"script"}