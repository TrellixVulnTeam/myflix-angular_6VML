{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nvar async_1 = require(\"../scheduler/async\");\n\nvar isNumeric_1 = require(\"../util/isNumeric\");\n\nvar isScheduler_1 = require(\"../util/isScheduler\");\n\nfunction timer(dueTime, periodOrScheduler, scheduler) {\n  if (dueTime === void 0) {\n    dueTime = 0;\n  }\n\n  var period = -1;\n\n  if (isNumeric_1.isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler_1.isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler;\n  }\n\n  if (!isScheduler_1.isScheduler(scheduler)) {\n    scheduler = async_1.async;\n  }\n\n  return new Observable_1.Observable(function (subscriber) {\n    var due = isNumeric_1.isNumeric(dueTime) ? dueTime : +dueTime - scheduler.now();\n    return scheduler.schedule(dispatch, due, {\n      index: 0,\n      period: period,\n      subscriber: subscriber\n    });\n  });\n}\n\nexports.timer = timer;\n\nfunction dispatch(state) {\n  var index = state.index,\n      period = state.period,\n      subscriber = state.subscriber;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n} //# sourceMappingURL=timer.js.map","map":null,"metadata":{},"sourceType":"script"}